name: Deploy Site
on:
  workflow_call:
    secrets:
      HEROKU_API_KEY:
        required: true
      HEROKU_EMAIL:
        required: true

jobs:
  dev:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://uber-dev-goncalosn.herokuapp.com
    if: ${{ github.ref != 'refs/heads/master' &&  github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ./dist
          key: ${{ runner.os }}-dist-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-dist-${{ github.run_id }}
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ''
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          justlogin: true
      - name: Heroku container login
        run: heroku container:login
      - name: Docker build
        run: docker build -t registry.heroku.com/uber-dev-goncalosn/web -f ./packages/site/Dockerfile .
      - name: Heroku push image
        run: docker push registry.heroku.com/uber-dev-goncalosn/web
      - name: Heroku release image
        run: heroku container:release web --app uber-dev-goncalosn

  staging:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://uber-staging-goncalosn.herokuapp.com
    if: ${{ github.event_name == 'pull_request' ||  github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ./dist
          key: ${{ runner.os }}-dist-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-dist-${{ github.run_id }}
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ''
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          justlogin: true
      - name: Heroku container login
        run: heroku container:login
      - name: Docker build
        run: docker build -t registry.heroku.com/uber-staging-goncalosn/web -f ./packages/site/Dockerfile .
      - name: Heroku push image
        run: docker push registry.heroku.com/uber-staging-goncalosn/web
      - name: Heroku release image
        run: heroku container:release web --app uber-staging-goncalosn
  e2e:
    needs: staging
    runs-on: ubuntu-latest
    if: ${{ needs.staging.result == 'success' }}
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i -g pnpm@6.32.6
      - run: pnpm install
      - run: pnpm nx run site-e2e:e2e:cicd --baseUrl=https://uber-staging-goncalosn.herokuapp.com

  prod:
    runs-on: ubuntu-latest
    needs: e2e
    environment:
      name: production
      url: https://uber-goncalosn.herokuapp.com
    if: ${{ github.ref == 'refs/heads/master' && needs.e2e.result == 'success' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ./dist
          key: ${{ runner.os }}-dist-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-dist-${{ github.run_id }}
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ''
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          justlogin: true
      - name: Heroku container login
        run: heroku container:login
      - name: Docker build
        run: docker build -t registry.heroku.com/uber-goncalosn/web -f ./packages/site/Dockerfile .
      - name: Heroku push image
        run: docker push registry.heroku.com/uber-goncalosn/web
      - name: Heroku release image
        run: heroku container:release web --app uber-goncalosn
